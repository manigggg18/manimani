{
  
    
        "post0": {
            "title": "N@tM Blog",
            "content": "Night at the Museum Blog . 1. GPA Calculator . . 2. NBA/Sports Data API . . 3. Programming Flashcards and Quiz . .",
            "url": "https://manigggg18.github.io/manimani/natmblog",
            "relUrl": "/natmblog",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fetch of Backend Songs",
            "content": "| JavaScript | Table | API | Songs | . Song banger not banger .",
            "url": "https://manigggg18.github.io/manimani/songs",
            "relUrl": "/songs",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Web API Endpoints using Songs",
            "content": "import random songs_data = [] song_list = [ &quot;Jeff Russo, Noah Hawley - Burning Down the House&quot;, &quot;Radiohead - Everything in Its Right Place&quot;, &quot;UNKLE - Lonely Souls&quot;, &quot;Kendrick Lamar - Sing About Me, I&#39;m Dying of Thirst&quot;, &quot;The Verve - One Day&quot;, &quot;Thom Yorke - Analyze&quot;, &quot;Atoms for Peace - Reverse Running&quot;, &quot;Portishead - The Rip&quot;, &quot;Nick Drake - Riverman&quot;, &quot;The Doors - The End&quot;, &quot;The Police - Synchronicity II&quot;, &quot;Incubus - Quicksand&quot;, &#39;Black Angels - Black Grease&#39; ] def initSongs(): item_id = 0 for item in song_list: songs_data.append({&quot;id&quot;: item_id, &quot;song&quot;: item, &quot;banger&quot;: 0, &quot;not banger&quot;: 0}) item_id += 1 for i in range(200): id = getRandomSong()[&#39;id&#39;] addSongBanger(id) for i in range(50): id = getRandomSong()[&#39;id&#39;] addSongNot(id) def getSongs(): return(songs_data) def getSong(id): return(songs_data[id]) def getRandomSong(): return(random.choice(songs_data)) def favoriteSong(): best = 0 bestID = -1 for song in getSongs(): if song[&#39;banger&#39;] &gt; best: best = song[&#39;banger&#39;] bestID = song[&#39;id&#39;] return songs_data[bestID] def jeeredSong(): worst = 0 worstID = -1 for song in getSongs(): if song[&#39;not banger&#39;] &gt; worst: worst = song[&#39;not banger&#39;] worstID = song[&#39;id&#39;] return songs_data[worstID] def addSongBanger(id): songs_data[id][&#39;banger&#39;] = songs_data[id][&#39;banger&#39;] + 1 return songs_data[id][&#39;banger&#39;] def addSongNot(id): songs_data[id][&#39;not banger&#39;] = songs_data[id][&#39;not banger&#39;] + 1 return songs_data[id][&#39;not banger&#39;] def printSong(song): print(song[&#39;id&#39;], song[&#39;song&#39;], &quot; n&quot;, &quot;banger:&quot;, song[&#39;banger&#39;], &quot; n&quot;, &quot;not banger:&quot;, song[&#39;not banger&#39;], &quot; n&quot;) def countSongs(): return len(songs_data) if __name__ == &quot;__main__&quot;: initSongs() best = favoriteSong() print(&quot;Most liked&quot;, best[&#39;banger&#39;]) printSong(best) worst = jeeredSong() print(&quot;Most jeered&quot;, worst[&#39;not banger&#39;]) printSong(worst) print(&quot;Random song&quot;) printSong(getRandomSong()) print(&quot;Songs Count: &quot; + str(countSongs())) . Most liked 24 2 UNKLE - Lonely Souls banger: 24 not banger: 2 Most jeered 6 8 Nick Drake - Riverman banger: 16 not banger: 6 Random song 9 The Doors - The End banger: 11 not banger: 3 Songs Count: 13 . from flask import Blueprint, jsonify from flask_restful import Api, Resource import requests import random app_api = Blueprint(&#39;api&#39;, __name__, url_prefix=&#39;/api/songs&#39;) api = Api(app_api) class SongsAPI: class _Create(Resource): def post(self, song): pass class _Read(Resource): def get(self): return jsonify(getSongs()) class _ReadID(Resource): def get(self, id): return jsonify(getSong(id)) class _ReadRandom(Resource): def get(self): return jsonify(getRandomSong()) class _ReadCount(Resource): def get(self): count = countSongs() countMsg = {&#39;count&#39;: count} return jsonify(countMsg) class _UpdateLike(Resource): def put(self, id): addSongBanger(id) return jsonify(getSong(id)) class _UpdateJeer(Resource): def put(self, id): addSongNot(id) return jsonify(getSong(id)) api.add_resource(_Create, &#39;/create/&lt;string:song&gt;&#39;) api.add_resource(_Read, &#39;/&#39;) api.add_resource(_ReadID, &#39;/&lt;int:id&gt;&#39;) api.add_resource(_ReadRandom, &#39;/random&#39;) api.add_resource(_ReadCount, &#39;/count&#39;) api.add_resource(_UpdateLike, &#39;/like/&lt;int:id&gt;/&#39;) api.add_resource(_UpdateJeer, &#39;/jeer/&lt;int:id&gt;/&#39;) . server = &#39;https://flask.maniflpt.com/&#39; url = server + &quot;api/songs/&quot; responses = [] count_response = requests.get(url+&quot;count&quot;) count_json = count_response.json() count = count_json[&#39;count&#39;] num = str(random.randint(0, count-1)) responses.append( requests.get(url+num) ) responses.append( requests.put(url+&quot;like/&quot;+num) ) responses.append( requests.put(url+&quot;jeer/&quot;+num) ) responses.append( requests.get(url+&quot;random&quot;) ) for response in responses: print(response) try: print(response.json()) except: print(&quot;data error&quot;) . gaierror Traceback (most recent call last) File ~/anaconda3/lib/python3.9/site-packages/urllib3/connection.py:174, in HTTPConnection._new_conn(self) 173 try: --&gt; 174 conn = connection.create_connection( 175 (self._dns_host, self.port), self.timeout, **extra_kw 176 ) 178 except SocketTimeout: File ~/anaconda3/lib/python3.9/site-packages/urllib3/util/connection.py:72, in create_connection(address, timeout, source_address, socket_options) 68 return six.raise_from( 69 LocationParseError(u&#34;&#39;%s&#39;, label empty or too long&#34; % host), None 70 ) &gt; 72 for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM): 73 af, socktype, proto, canonname, sa = res File ~/anaconda3/lib/python3.9/socket.py:954, in getaddrinfo(host, port, family, type, proto, flags) 953 addrlist = [] --&gt; 954 for res in _socket.getaddrinfo(host, port, family, type, proto, flags): 955 af, socktype, proto, canonname, sa = res gaierror: [Errno -2] Name or service not known During handling of the above exception, another exception occurred: NewConnectionError Traceback (most recent call last) File ~/anaconda3/lib/python3.9/site-packages/urllib3/connectionpool.py:703, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw) 702 # Make the request on the httplib connection object. --&gt; 703 httplib_response = self._make_request( 704 conn, 705 method, 706 url, 707 timeout=timeout_obj, 708 body=body, 709 headers=headers, 710 chunked=chunked, 711 ) 713 # If we&#39;re going to release the connection in ``finally:``, then 714 # the response doesn&#39;t need to know about the connection. Otherwise 715 # it will also try to release it and we&#39;ll have a double-release 716 # mess. File ~/anaconda3/lib/python3.9/site-packages/urllib3/connectionpool.py:386, in HTTPConnectionPool._make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw) 385 try: --&gt; 386 self._validate_conn(conn) 387 except (SocketTimeout, BaseSSLError) as e: 388 # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout. File ~/anaconda3/lib/python3.9/site-packages/urllib3/connectionpool.py:1040, in HTTPSConnectionPool._validate_conn(self, conn) 1039 if not getattr(conn, &#34;sock&#34;, None): # AppEngine might not have `.sock` -&gt; 1040 conn.connect() 1042 if not conn.is_verified: File ~/anaconda3/lib/python3.9/site-packages/urllib3/connection.py:358, in HTTPSConnection.connect(self) 356 def connect(self): 357 # Add certificate verification --&gt; 358 self.sock = conn = self._new_conn() 359 hostname = self.host File ~/anaconda3/lib/python3.9/site-packages/urllib3/connection.py:186, in HTTPConnection._new_conn(self) 185 except SocketError as e: --&gt; 186 raise NewConnectionError( 187 self, &#34;Failed to establish a new connection: %s&#34; % e 188 ) 190 return conn NewConnectionError: &lt;urllib3.connection.HTTPSConnection object at 0x7f7dbd302cd0&gt;: Failed to establish a new connection: [Errno -2] Name or service not known During handling of the above exception, another exception occurred: MaxRetryError Traceback (most recent call last) File ~/anaconda3/lib/python3.9/site-packages/requests/adapters.py:440, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies) 439 if not chunked: --&gt; 440 resp = conn.urlopen( 441 method=request.method, 442 url=url, 443 body=request.body, 444 headers=request.headers, 445 redirect=False, 446 assert_same_host=False, 447 preload_content=False, 448 decode_content=False, 449 retries=self.max_retries, 450 timeout=timeout 451 ) 453 # Send the request. 454 else: File ~/anaconda3/lib/python3.9/site-packages/urllib3/connectionpool.py:785, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw) 783 e = ProtocolError(&#34;Connection aborted.&#34;, e) --&gt; 785 retries = retries.increment( 786 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2] 787 ) 788 retries.sleep() File ~/anaconda3/lib/python3.9/site-packages/urllib3/util/retry.py:592, in Retry.increment(self, method, url, response, error, _pool, _stacktrace) 591 if new_retry.is_exhausted(): --&gt; 592 raise MaxRetryError(_pool, url, error or ResponseError(cause)) 594 log.debug(&#34;Incremented Retry for (url=&#39;%s&#39;): %r&#34;, url, new_retry) MaxRetryError: HTTPSConnectionPool(host=&#39;flask.maniflpt.com&#39;, port=443): Max retries exceeded with url: /api/songs/count (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPSConnection object at 0x7f7dbd302cd0&gt;: Failed to establish a new connection: [Errno -2] Name or service not known&#39;)) During handling of the above exception, another exception occurred: ConnectionError Traceback (most recent call last) /mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb Cell 4 in &lt;cell line: 5&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; url = server + &#34;api/songs/&#34; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; responses = [] -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; count_response = requests.get(url+&#34;count&#34;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; count_json = count_response.json() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/tmani/vscode/manimani/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; count = count_json[&#39;count&#39;] File ~/anaconda3/lib/python3.9/site-packages/requests/api.py:75, in get(url, params, **kwargs) 64 def get(url, params=None, **kwargs): 65 r&#34;&#34;&#34;Sends a GET request. 66 67 :param url: URL for the new :class:`Request` object. (...) 72 :rtype: requests.Response 73 &#34;&#34;&#34; &gt; 75 return request(&#39;get&#39;, url, params=params, **kwargs) File ~/anaconda3/lib/python3.9/site-packages/requests/api.py:61, in request(method, url, **kwargs) 57 # By using the &#39;with&#39; statement we are sure the session is closed, thus we 58 # avoid leaving sockets open which can trigger a ResourceWarning in some 59 # cases, and look like a memory leak in others. 60 with sessions.Session() as session: &gt; 61 return session.request(method=method, url=url, **kwargs) File ~/anaconda3/lib/python3.9/site-packages/requests/sessions.py:529, in Session.request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json) 524 send_kwargs = { 525 &#39;timeout&#39;: timeout, 526 &#39;allow_redirects&#39;: allow_redirects, 527 } 528 send_kwargs.update(settings) --&gt; 529 resp = self.send(prep, **send_kwargs) 531 return resp File ~/anaconda3/lib/python3.9/site-packages/requests/sessions.py:645, in Session.send(self, request, **kwargs) 642 start = preferred_clock() 644 # Send the request --&gt; 645 r = adapter.send(request, **kwargs) 647 # Total elapsed time of the request (approximately) 648 elapsed = preferred_clock() - start File ~/anaconda3/lib/python3.9/site-packages/requests/adapters.py:519, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies) 515 if isinstance(e.reason, _SSLError): 516 # This branch is for urllib3 v1.22 and later. 517 raise SSLError(e, request=request) --&gt; 519 raise ConnectionError(e, request=request) 521 except ClosedPoolError as e: 522 raise ConnectionError(e, request=request) ConnectionError: HTTPSConnectionPool(host=&#39;flask.maniflpt.com&#39;, port=443): Max retries exceeded with url: /api/songs/count (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPSConnection object at 0x7f7dbd302cd0&gt;: Failed to establish a new connection: [Errno -2] Name or service not known&#39;)) .",
            "url": "https://manigggg18.github.io/manimani/webapi",
            "relUrl": "/webapi",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Javascript Web Page using an API",
            "content": "&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Song&lt;/th&gt; &lt;th&gt;Banger&lt;/th&gt; &lt;th&gt;Not Banger&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;/tbody&gt; &lt;/table&gt; . evalmachine.&lt;anonymous&gt;:1 &lt;table&gt; ^ SyntaxError: Unexpected token &lt; at createScript (vm.js:56:10) at Object.runInThisContext (vm.js:97:10) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) at process._tickCallback (internal/process/next_tick.js:104:9) . const resultContainer = document.getElementById(&quot;result&quot;); const BANGER = &quot;banger&quot;; const NOT = &quot;not banger&quot;; const url = &quot;https://flask.maniflpt.com/api/jokes&quot;; const like_url = url + &quot;/like/&quot;; const jeer_url = url + &quot;/jeer/&quot;; const options = { method: &#39;GET&#39;, mode: &#39;cors&#39;, cache: &#39;default&#39;, credentials: &#39;omit&#39;, headers: { &#39;Content-Type&#39;: &#39;application/json&#39; }, }; const put_options = {...options, method: &#39;PUT&#39;}; . evalmachine.&lt;anonymous&gt;:20 const put_options = {...options, method: &#39;PUT&#39;}; ^^^ SyntaxError: Unexpected token ... at createScript (vm.js:56:10) at Object.runInThisContext (vm.js:97:10) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) at process._tickCallback (internal/process/next_tick.js:104:9) . fetch(url, options) .then(response =&gt; { if (response.status !== 200) { error(&#39;GET API response failure: &#39; + response.status); return; } response.json().then(data =&gt; { console.log(data); for (const row of data) { const tr = document.createElement(&quot;tr&quot;); const song = document.createElement(&quot;td&quot;); song.innerHTML = row.id + &quot;. &quot; + row.song; const banger = document.createElement(&quot;td&quot;); const banger = document.createElement(&#39;button&#39;); banger_but.id = BANGER+row.id banger_but.innerHTML = row.banger; banger_but.onclick = function () { reaction(BANGER, like_url+row.id, banger_but.id); }; banger.appendChild(banger_but); const not = document.createElement(&quot;td&quot;); const not_but = document.createElement(&#39;button&#39;); not_but.id = NOT+row.id not_but.innerHTML = row.not; not_but.onclick = function () { reaction(NOT, jeer_url+row.id, not_but.id); }; boohoo.appendChild(not_but); tr.appendChild(song); tr.appendChild(banger); tr.appendChild(not); resultContainer.appendChild(tr); } }) }) .catch(err =&gt; { error(err + &quot; &quot; + url); }); . evalmachine.&lt;anonymous&gt;:1 fetch(url, options) ^ ReferenceError: fetch is not defined at evalmachine.&lt;anonymous&gt;:1:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) . function reaction(type, put_url, elemID) { fetch(put_url, put_options) .then(response =&gt; { if (response.status !== 200) { error(&quot;PUT API response failure: &quot; + response.status) return; } response.json().then(data =&gt; { console.log(data); if (type === BANGER) document.getElementById(elemID).innerHTML = data.banger; else if (type === NOT) document.getElementById(elemID).innerHTML = data.not; else error(&quot;unknown type: &quot; + type); }) }) .catch(err =&gt; { error(err + &quot; &quot; + put_url); }); } function error(err) { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); } .",
            "url": "https://manigggg18.github.io/manimani/webfrontend",
            "relUrl": "/webfrontend",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "AP 4.1 Quiz Blog",
            "content": "AP Quiz Completion Proof . Internet is a more difficult topic than the previous AP topics, but the College Board videos help with providing a basic understanding. . . . . Questions . 4.1 (2/3) . . Q1 (Correct): Which of the following best explains how messages are typically transmitted over the Internet? . The message is broken into packets that are transmitted in a specified order. Each packet must be received in the order it was sent for the message to be correctly reassembled by the recipient’s device. . | The message is broken into packets. The packets can be received in any order and still be reassembled by the recipient’s device. . | The message is broken into two packets. One packet contains the data to be transmitted and the other packet contains metadata for routing the data to the recipient’s device. . | The message is transmitted as a single file and received in whole by the recipient’s device. . | . Answer: The message is broken into packets. The packets can be received in any order and still be reassembled by the recipient’s device. . Messages are broken into packets. Each packet contains data to be transmitted, as well as metadata for routing and reassembling the data upon receipt. This allows the packets to be received in any order and still be reassembled correctly. . . Q2 (Incorrect): Which of the following is a primary reason for the use of open protocols on the Internet? . Open protocols allow devices to specify how data packets are to be routed on the Internet in advance. . | Open protocols ensure that all data transmission on the Internet is kept secure. . | Open protocols ensure that all Internet users are provided connections with equal bandwidth. . | Open protocols provide a way to standardize data transmission between different devices. . | . My Answer : Open protocols allow devices to specify how data packets are to be routed on the Internet in advance. . Routing on the Internet is usually dynamic; it is not specified in advance. . Correct Answer: Open protocols provide a way to standardize data transmission between different devices. . Protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way. . . Q3 (Correct): Which of the following best describes the relationship between the World Wide Web and the Internet? . The World Wide Web is a protocol that is accessed using a data stream called the Internet. . | The World Wide Web is a system of linked pages, programs, and files that is accessed using a data stream called the Internet. . | The World Wide Web is a system of linked pages, programs, and files that is accessed via a network called the Internet. . | The World Wide Web is a Web site that is accessed using a protocol called the Internet. . | . Answer: The World Wide Web is a system of linked pages, programs, and files that is accessed via a network called the Internet. . The Internet is an interconnected network of networks, and the World Wide Web is an information system that is accessed via the Internet. . . . Click here to access additional resources for Collaboration, Program Function/Purpose, and Program Design/Development. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/10/14/apblog3.html",
            "relUrl": "/markdown/2022/10/14/apblog3.html",
            "date": " • Oct 14, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Identifying Errors",
            "content": "Example #1 . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . Using a While Loop to Get the Intended Outcome . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter b is the 2 letter in the alphabet . Using a For Loop to Get the Intended Outcome . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 2 letter in the alphabet . Evens: While Loop . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . Odds: While Loop . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . Evens: For Loop . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . Odds For Loop . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . Simultaneous Usage of For Loop and While Loop for Lists . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: pass elif numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge Completion . I decided to add more items in order to create a wider options for using the second item (drinks). After successfully fixing the code I decided to add a calculation function to accept more than one item. The code segment now adds the drink (msg) value and the meal (item) value to calculate the total cost of the order. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;coke&quot;: 0.99, &quot;sprite&quot;: 0.99, &quot;devious drink&quot;: 0.01, &quot;jake from statefarm&quot;: 2999.99} total = 0 # shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) while total == 0: # item 1: meal (item) item = input(&quot;What would you like to order?&quot;) print(&quot;Meal:&quot;, item.lower()) for k,v in menu.items(): if item.lower() == k: print(&quot;Price: $&quot;, menu[item.lower()]) total = 1 # item 2: drink (msg) msg = input(&quot;Would you like to order drinks?&quot;) print(&quot;Drink:&quot;, msg.lower()) for k,v in menu.items(): if msg.lower() == k: print(&quot;Price: $&quot;, menu[msg.lower()]) total = 1 # calculating the total print(&quot;Total:&quot;, menu[item.lower()] + menu[msg.lower()]) # final message print(&quot;Thank you for stopping by! Have a nice day!&quot;) . Menu burger $3.99 fries $1.99 coke $0.99 sprite $0.99 devious drink $0.01 jake from statefarm $2999.99 Meal: jake from statefarm Price: $ 2999.99 Drink: devious drink Price: $ 0.01 Total: 3000.0 Thank you for stopping by! Have a nice day! .",
            "url": "https://manigggg18.github.io/manimani/jupyter/errors",
            "relUrl": "/jupyter/errors",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "AP 1.4 Quiz Blog",
            "content": "AP Quiz Completion Proof . Same as the previous blog. I did my best, but I did not reach my intended results. As always, I’m still learning and there’s much room for improvement. . . . . Questions . 1.4 (2/3) . . Q1 (Correct): In the following code segment, score and penalty are initially positive integers. The code segment is intended to reduce the value of score by penalty. However, if doing so would cause score to be negative, score should be assigned the value 0. For example, if score is 20 and penalty is 5, the code segment should set score to 15. If score is 20 and penalty is 30, score should be set to 0. The code segment does not work as intended. . Line 1: IF(score - penalty &lt; 0) . Line 2: { . Line 3: score ← score - penalty . Line 4: } . Line 5: ELSE . Line 6: { . Line 7: score ← 0 . Line 8: } . Which of the following changes can be made so that the code segment works as intended? . Answer: Interchaning lines 3 and 7. . Interchanging lines 3 and 7 ensures that if reducing score by penalty results in a negative value, score is set to 0. Otherwise, score is reduced by penalty. . . Q2 (Incorrect): The following procedure is intended to return true if the list of numbers myList contains only positive numbers and is intended to return false otherwise. The procedure does not work as intended. . PROCEDURE allPositive(myList) . { . index ← 1 . len ← LENGTH(myList) . REPEAT len TIMES . { . IF(myList[index] &gt; 0) . { . RETURN(true) . } . index ← index + 1 . } . RETURN(false) . } . My Answer : [1, 2, 3] . The procedure begins to traverse the list and immediately encounters the positive value 1. At this point, the procedure returns true as intended for this list. . Correct Answer: [-1, 0, 1] . The procedure traverses this list and eventually encounters the positive value 1. At this point, the procedure returns true when it should return false because the list does not contain only positive values. . . Q3 (Correct): A homework assignment consists of 10 questions. The assignment is graded as follows. . . Let numCorrect represent the number of correct answers for a particular student. The following code segment is intended to display the appropriate grade based on numCorrect. The code segment does not work as intended in all cases. . . For which of the following values of numCorrect does the code segment NOT display the intended grade? . Answer(s): 8: When numCorrect is 8, the condition numCorrect &gt; 7 evaluates to true and the condition numCorrect ≥ 9 evaluates to false. Therefore “check minus” is displayed instead of the intended “check plus”. . 6: When numCorrect is 6, the condition numCorrect &gt; 7 evaluates to false. Therefore “check” is displayed instead of the intended “check minus”. . . . Click here to access additional resources for Collaboration, Program Function/Purpose, and Program Design/Development. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/10/08/apblog2.html",
            "relUrl": "/markdown/2022/10/08/apblog2.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "AWS Development",
            "content": "Curl Output . . . . Curl Html2text Output . . . Git Status, Docker Compose, Docker . .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/10/04/aws.html",
            "relUrl": "/markdown/2022/10/04/aws.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python RapidAPI",
            "content": "| JavaScript | Table | API | Songs | . . API Usage and Organization: Radio Stations (France) . import requests url = &quot;https://radio-world-50-000-radios-stations.p.rapidapi.com/v1/radios/getTopByCountry&quot; querystring = {&quot;query&quot;:&quot;fr&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;24662782b6msh7d95c7667aea623p12c71ajsnc0aa91d82aa9&quot;, &quot;X-RapidAPI-Host&quot;: &quot;radio-world-50-000-radios-stations.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) # printing organized data stats = response.json().get(&#39;radios&#39;) # data file type/name for stat in stats: # list: stat in stats if stat[&quot;channel_id&quot;] == 7751: for key, value in stat.items(): print(key, value) . image_url https://mypromotions.sfo2.cdn.digitaloceanspaces.com/radios/7751.jpg name France Info uri https://icecast.radiofrance.fr/franceinfo-midfi.mp3 channel_id 7751 countryCode fr genre News,Talk . Alternate Query (US) . import requests url = &quot;https://radio-world-50-000-radios-stations.p.rapidapi.com/v1/radios/getTopByCountry&quot; querystring = {&quot;query&quot;:&quot;us&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;f5bcc1b7damsh9cd6eb2e03d6591p14cf1djsn33097094485f&quot;, &quot;X-RapidAPI-Host&quot;: &quot;radio-world-50-000-radios-stations.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) # printing organized data stats = response.json().get(&#39;radios&#39;) # data file type/name for stat in stats: # list: stat in stats if stat[&quot;channel_id&quot;] == 58039: for key, value in stat.items(): print(key, value) . image_url https://mypromotions.sfo2.cdn.digitaloceanspaces.com/radios/58039.jpg name FOX News Radio uri https://streaming-ent.shoutcast.com/foxnews channel_id 58039 countryCode us genre News,Talk .",
            "url": "https://manigggg18.github.io/manimani/rapidapi",
            "relUrl": "/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "AP 1.1-1.3 Quiz Blog",
            "content": "AP Quiz Completion Proof . I’m nowhere near satisfied with my test results, but I believe tha every mistake is a step toward success. Therefore I’m going to record my mistakes and my key takeaways. . . . . Mistakes . 1.1 (2/3) . . Q3: A company that develops mobile applications wants to involve users in the software development process. Which of the following best explains the benefit in having users participate? . My Response: Users can provide documentation for program code at the end of the software development process. . Users are unlikely to have the expertise needed to understand and provide documentation for program code. . Correct Response: Users can provide feedback that can be used to incorporate a variety of perspectives into the software. . . . 1.2 (3/6) . . Q1: Consider the following code segment. . . Which of the following best describes the behavior of the code segment? . My Response: The code segment displays the value of 2(5×3) by initializing result to 2 and then multiplying result by 5 a total of three times. . Initializing result to 2 and multiplying it by 5 a total of three times yields 2(53), not 2(5×3). . Correct Response: The code segment displays the value of 2(53) by initializing result to 2 and then multiplying result by 5 a total of three times. . . Q5: A student wrote the following code segment, which displays true if the list myList contains any duplicate values and displays false otherwise. . . The code segment compares pairs of list elements, setting containsDuplicates to true if any two elements are found to be equal in value. Which of the following best describes the behavior of how pairs of elements are compared? . My Response: The code segment iterates through myList, comparing each element to the element that immediately follows it in the list. . The inner loop iterates from index j + 1 to the end of the list, so each element is compared with the all elements that follow it, not just the one element that immediately follows it. . Correct Response: The code segment iterates through myList, comparing each element to all subsequent elements in the list. . . Q6: A student is creating an application that allows customers to order food for delivery from a local restaurant. Which of the following is LEAST likely to be an input provided by a customer using the application? . My Response: The name of a food item to be included in the delivery . The name of a food item is input that needs to be provided by the customer in order for the order to be completed. . Correct Response: The cost of a food item currently available for order . . . 1.3 (2/3) . . Q1: In the following procedure, the parameter max is a positive integer. . PROCEDURE printNums(max) . { . ` count ← 1` . ` REPEAT UNTIL(count &gt; max)` . ` {` . ` DISPLAY(count)` . ` count ← count + 2` . ` }` . } . Which of the following is the most appropriate documentation to appear with the printNums procedure? . My Response: Prints all positive odd integers that are greater than max. . The loop terminates when count exceeds max, so only values less than or equal to max are printed. . Correct Response: Prints all positive odd integers that are less than or equal to max. . . . Click here to access additional resources for Collaboration, Program Function/Purpose, and Program Design/Development. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/28/apblog.html",
            "relUrl": "/markdown/2022/09/28/apblog.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Java Table",
            "content": "| JavaScript | Table | API | Songs | . . Table . The cell containing previous definitions and functions is hidden in order to create a more organized blog. . Full code can be found here. . Medias.prototype._toHtml = function() { // inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 5px solid blue;&quot; + &quot;box-shadow: 1em 1em 1em red;&quot; ); var body = &quot;&quot;; // Heading body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Name&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Creator&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Date&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Type&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array for (var row of catalog.medias) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.cre + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.date + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.type + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( // div, table, table body &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(catalog._toHtml()); // receives parameter of defined HTML fragment . NameCreatorDateType . Kid A | Radiohead | 2000 | Album | Whiplash | Damien Chazelle | 2014 | Movie | Atonement | Joe Wright | 2007 | Movie | Prestige | Christopher Nolan | 2006 | Movie | Fargo | Noah Hawley | 2014 | Show | Daredevil | Kati Johnson | 2015 | Show | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://manigggg18.github.io/manimani/jupyter/java_table",
            "relUrl": "/jupyter/java_table",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Java (IPYNB)",
            "content": "| JavaScript | Table | API | Songs | . . Single Function: Product Return . const factorial = function fac(n) { // calls a function which performs a calculation and returns the result return n &lt; 2 ? 1 : n * fac(n - 1); } console.log(factorial(7)) . 5040 . Set of Functions and Definitions: JSON Lists and Prototypes . function printInfo(msg) { // Necessary definition console.log(typeof msg + &quot;;&quot;, msg); } function Media(name, cre, date) { // Define media this.name = name; this.cre = cre; this.date = date; this.type = &quot;&quot;; } Media.prototype.setType = function(type) { // Introduce prototype this.type = type; } Media.prototype.toJSON = function() { // organize const data = {name: this.name, cre: this.cre, date: this.date, type: this.type}; const jsonString = JSON.stringify(data); return jsonString; } var album = new Media(&quot;Kid A&quot;, &quot;Radiohead&quot;, 2000); // song variable album.setType(&quot;Album&quot;); var movie = [ // movie variables new Media(&quot;Whiplash&quot;, &quot;Damien Chazelle&quot;, 2014), new Media(&quot;Atonement&quot;, &quot;Joe Wright&quot;, 2007), new Media(&quot;Prestige&quot;, &quot;Christopher Nolan&quot;, 2006) ] var show = [ // show variables new Media(&quot;Fargo&quot;, &quot;Noah Hawley&quot;, 2014), new Media(&quot;Daredevil&quot;, &quot;Kati Johnson&quot;, 2015), ] function Medias(album, movie, show) { album.setType(&quot;Album&quot;); this.album = album; this.medias = [album]; this.movie = movie; this.show = show; this.movie.forEach(movie =&gt; {movie.setType(&quot;Movie&quot;); this.medias.push(movie);}); this.show.forEach(show =&gt; {show.setType(&quot;Show&quot;); this.medias.push(show);}); this.jsonMedias = []; this.medias.forEach(media =&gt; this.jsonMedias.push(media.toJSON())); } catalog = new Medias(album, movie, show); printInfo(catalog.medias); printInfo(catalog.medias[4].name); printInfo(catalog.jsonMedias[4]); printInfo(JSON.parse(catalog.jsonMedias[4])); . object; [ Media { name: &#39;Kid A&#39;, cre: &#39;Radiohead&#39;, date: 2000, type: &#39;Album&#39; }, Media { name: &#39;Whiplash&#39;, cre: &#39;Damien Chazelle&#39;, date: 2014, type: &#39;Movie&#39; }, Media { name: &#39;Atonement&#39;, cre: &#39;Joe Wright&#39;, date: 2007, type: &#39;Movie&#39; }, Media { name: &#39;Prestige&#39;, cre: &#39;Christopher Nolan&#39;, date: 2006, type: &#39;Movie&#39; }, Media { name: &#39;Fargo&#39;, cre: &#39;Noah Hawley&#39;, date: 2014, type: &#39;Show&#39; }, Media { name: &#39;Daredevil&#39;, cre: &#39;Kati Johnson&#39;, date: 2015, type: &#39;Show&#39; } ] string; Fargo string; {&#34;name&#34;:&#34;Fargo&#34;,&#34;cre&#34;:&#34;Noah Hawley&#34;,&#34;date&#34;:2014,&#34;type&#34;:&#34;Show&#34;} object; { name: &#39;Fargo&#39;, cre: &#39;Noah Hawley&#39;, date: 2014, type: &#39;Show&#39; } .",
            "url": "https://manigggg18.github.io/manimani/jupyter/java_ipynb",
            "relUrl": "/jupyter/java_ipynb",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Program Purpose - Mani's Idea",
            "content": "Same Design as Create Performance Task . initial design concept: In the form of a “loading screen”. The “loading screen” gets filled with each click. . Features: Timer, Calculator, Counter, Scoring System, Frontend elements. . Language: Undecided . Objective: Click as fast as possible in a given time. . . . . DISCLAIMER: This is just an idea for the group project and NOT a final concept. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/22/prpurpose.html",
            "relUrl": "/markdown/2022/09/22/prpurpose.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Testing Local Server Functions",
            "content": "Process . After entering the “make server” command on a terminal and letting it run, I decided to add a minor change to ‘index.html`. Some texts came up on the terminal and the change was presented immediately. The only problem was that adding a Jupyter Notebook and editing it did not have any effects. . Effects . . . .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/14/ls.html",
            "relUrl": "/markdown/2022/09/14/ls.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "CPT Initial Concept",
            "content": "Individual/Collaboration: Undecided . Language: Python or JavaScript . Goals: . Final program code (created independently or collaboratively) . | A video that displays the running of your program and demonstrates functionality you developed (created independently) . | Written responses to all the prompts in the performance task (created independently) . | . Plan: . I’m planning to design a simple yet creative game, though I’m still not sure what development program I’m going to use. . My initial concept is a time based game. The user has to click/press a key for a specified number of times before the time runs out. I’m planning to implement a code that makes the game harder after each “level”. . Design: . I’m still working on it, but my initial design concept is in the form of a “loading screen”. The “loading screen” gets filled with each click. . .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/11/cpt1.html",
            "relUrl": "/markdown/2022/09/11/cpt1.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "App Development Blog",
            "content": "Link to the app can be found at the bottom of the page. . Note: These code blocks are not optimized for Python. . . Process . Making the quiz was very simple and interesting. The quiz includes 3 multiple-choice questions and 1 free-response question. Working with different elements such as buttons and images was easy for the most part and didn’t present any challenges. Making the free response question was a bit tricky. I had to play around with its assigned block and the text input function to make it work. . # Default Notation . onEvent(&quot;textinput&quot;, &quot;change&quot;, function(event) { . }); . # My Edit . onEvent(&quot;text_input1&quot;, &quot;change&quot;, function(event) { . }); . . Another extra feature that I added to my app was the usage of retrieving data from a text input. By adding the following code to the text input function, I managed to display the entered number from the free-response question: . # Default Notation . onEvent(&quot;textinput&quot;, &quot;change&quot;, function(event) { . setText(&quot;id&quot;, + getText(&quot;textinput&quot;)); . | setScreen(&quot;id&quot;); . | . }); . # My Edit . onEvent(&quot;text_input1&quot;, &quot;change&quot;, function(event) { . setText(&quot;response&quot;, &quot;Wow, only &quot; + getText(&quot;text_input1&quot;) + &quot;?&quot;); . | setScreen(&quot;r1&quot;); . | . }); . . . I also added to add “wrong answer” screens which appear if the user selects wrong answers. I simply assigned these screens to appropriate buttons. . . . Currently I’m trying to figure out a way to make the code a bit shorter using conditionals, but I don’t think it’ll work since I’m not that familiar with JavaScript. . . Update . I decided to use the dropdown function as a way to display a body of text. This dropdown box presents the “prize” to the user. . . . The trickiest part of developing this quiz was displaying the final score at the end. I used a variables and individual functions to make it work. The individual functions largely increase the size of the code and I couldn’t find a way to shorten them. Each individual function is assigned to a button. Buttons with correct answers add one point to the initial variable and buttons with incorrect answers subtract one point. . # setting the variable . var score = 0; . setText(&quot;text_input&quot;, &quot;Score = &quot; + score); . onEvent(&quot;id&quot;, &quot;click&quot;, function(event) { # in this case, id is a correct answer . score = score + 1; . | setText(&quot;text_input&quot;, &quot;Score = &quot; + score); # one point added . | . }); . onEvent(&quot;id&quot;, &quot;click&quot;, function(event) { # in this case, id is an incorrect answer . score = score - 1; . | setText(&quot;text_input&quot;, &quot;Score = &quot; + score); # one point subtracted . | . }); . . . You can check out the quiz by clicking here. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/11/appblog.html",
            "relUrl": "/markdown/2022/09/11/appblog.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Changing the Theme (Effects)",
            "content": "First Attempt . I tried to change the theme and as a result the CI status changed from “passing” to “failing”. My page also didn’t look any different. . . Second Attempt . . It worked but some posts looked very off-putting. . . So I changed it back to the default theme. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/01/theme.html",
            "relUrl": "/markdown/2022/09/01/theme.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Basic L/D . name = &quot;Mani T&quot; print(&quot;name&quot;, name, type(name)) age = 17 print(&quot;age&quot;, age, type(age)) score = 100.0 print(&quot;score&quot;, score, type(score)) print() langs = [&quot;Python&quot;, &quot;Bash&quot;, &quot;HTML&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() person = { &quot;name&quot;: name, # keys and values &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Mani T &lt;class &#39;str&#39;&gt; age 17 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;Bash&#39;, &#39;HTML&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Mani T&#39;, &#39;age&#39;: 17, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;Bash&#39;, &#39;HTML&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Mani T &lt;class &#39;str&#39;&gt; . Complex L/D . InfoDb = [] InfoDb.append({ #introduces the data &quot;FirstName&quot;: &quot;Mani&quot;, &quot;LastName&quot;: &quot;Taleban&quot;, &quot;DOB&quot;: &quot;May 8&quot;, &quot;Residence&quot;: &quot;Somewhere&quot;, &quot;SE&quot;: &quot;moeint56403@stu.powayusd.com&quot;, &quot;PE&quot;: &quot;tmanimasih@gmail.com&quot;, &quot;School&quot;: &quot;Del Norte High School&quot;, &quot;FM&quot;: &quot;Whiplash&quot;, &quot;FB&quot;: &quot;Radiohead&quot; }) print(InfoDb) def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # comma = space print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t = tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;School Email:&quot;, d_rec[&quot;SE&quot;]) print(&quot; t&quot;, &quot;Personal Email:&quot;, d_rec[&quot;PE&quot;]) print(&quot; t&quot;, &quot;School:&quot;, d_rec[&quot;School&quot;]) print(&quot; t&quot;, &quot;Favorite Movie:&quot;, d_rec[&quot;FM&quot;]) print(&quot; t&quot;, &quot;Favorite Band:&quot;, d_rec[&quot;FB&quot;]) print() def for_loop(): # for loop print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . [{&#39;FirstName&#39;: &#39;Mani&#39;, &#39;LastName&#39;: &#39;Taleban&#39;, &#39;DOB&#39;: &#39;May 8&#39;, &#39;Residence&#39;: &#39;Somewhere&#39;, &#39;SE&#39;: &#39;moeint56403@stu.powayusd.com&#39;, &#39;PE&#39;: &#39;tmanimasih@gmail.com&#39;, &#39;School&#39;: &#39;Del Norte High School&#39;, &#39;FM&#39;: &#39;Whiplash&#39;, &#39;FB&#39;: &#39;Radiohead&#39;}] For loop output Mani Taleban Residence: Somewhere Birth Day: May 8 School Email: moeint56403@stu.powayusd.com Personal Email: tmanimasih@gmail.com School: Del Norte High School Favorite Movie: Whiplash Favorite Band: Radiohead . For Loop with an Index . InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Mani&quot;, &quot;LastName&quot;: &quot;Taleban&quot;, &quot;DOB&quot;: &quot;May 8&quot;, &quot;Residence&quot;: &quot;Somewhere&quot;, &quot;SE&quot;: &quot;moeint56403@stu.powayusd.com&quot;, &quot;PE&quot;: &quot;tmanimasih@gmail.com&quot;, &quot;School&quot;: &quot;Del Norte High School&quot;, &quot;FM&quot;: &quot;Whiplash&quot;, &quot;FB&quot;: &quot;Radiohead&quot; }) print(InfoDb) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . [{&#39;FirstName&#39;: &#39;Mani&#39;, &#39;LastName&#39;: &#39;Taleban&#39;, &#39;DOB&#39;: &#39;May 8&#39;, &#39;Residence&#39;: &#39;Somewhere&#39;, &#39;SE&#39;: &#39;moeint56403@stu.powayusd.com&#39;, &#39;PE&#39;: &#39;tmanimasih@gmail.com&#39;, &#39;School&#39;: &#39;Del Norte High School&#39;, &#39;FM&#39;: &#39;Whiplash&#39;, &#39;FB&#39;: &#39;Radiohead&#39;}] While loop output Mani Taleban Residence: Somewhere Birth Day: May 8 School Email: moeint56403@stu.powayusd.com Personal Email: tmanimasih@gmail.com School: Del Norte High School Favorite Movie: Whiplash Favorite Band: Radiohead . InfoDb based Quiz . import getpass ,sys def question_and_answer(prompt, answer): # question and answer function print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): # this conditional determines the answers print(&quot;:)&quot;) global correct correct += 1 else: print (&quot;:(&quot;) questions = 5 correct = 0 Q1 = question_and_answer(&quot;What should I listen to right now?&quot;, &quot;music&quot;) Q2 = question_and_answer(&quot;When was I born?&quot;, &quot;may 8&quot;) Q3 = question_and_answer(&quot;Why was I born?&quot;, &quot;idk&quot;) Q4 = question_and_answer(&quot;Who plays Fletcher in Whiplash?&quot;, &quot;jk simmons&quot;) Q5 = question_and_answer(&quot;How&#39;s it going?&quot;, &quot;eh&quot;) Questions = { # infoDb &quot;Q1&quot;: Q1, &quot;Q2&quot;: Q2, &quot;Q3&quot;: Q3, &quot;Q4&quot;: Q4, &quot;Q5&quot;: Q5 } print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: What should I listen to right now? Answer: music :) Question: When was I born? Answer: may 8 :) Question: Why was I born? Answer: idk :) Question: Who plays Fletcher in Whiplash? Answer: jk simmons :) Question: How&#39;s it going? Answer: eh :) manimani you scored 5/5 .",
            "url": "https://manigggg18.github.io/manimani/jupyter/python_lists",
            "relUrl": "/jupyter/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Physics Notes 1",
            "content": "Background . Too often we think the goal of a laboratory is to “get an answer”. Just as a graph with one point does not tell us much, calculating a single value can be misleading. Although the accuracy of this value can be determined if a standard value is known, the precision or reproducibility cannot. One way to picture this precision is to graph the data and fit the data points with a best fit line. A best fit line should be drawn with as many points above it as below it, the closer the data points are to the line the more precise and reliable your results. . The equation describing the graph also shows how variables are related, allowing new values to be extrapolated or calculated from the graph. An additional step called “linearizing” helps determine the functional relationship between variables. . The objective of the linearizing process is to change the independent or dependent variable, for example change x to 1/x, so that the resulting graph is linear. So then, the equation describing the linear graph becomes; . y = slope (1/x) + intercept . Credits to Mr. Liao .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/28/physicsnotes.html",
            "relUrl": "/markdown/2022/08/28/physicsnotes.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Calculator",
            "content": "def add(x, y): return x + y def subtract(x, y): return x - y def divide(x, y): return x / y def multiply(x, y): return x * y print(&quot;Select operation.&quot;) print(&quot;1.Add&quot;) print(&quot;2.Subtract&quot;) print(&quot;3.Multiply&quot;) print(&quot;4.Divide&quot;) while True: choice = input(&quot;Enter choice(1/2/3/4): &quot;) if choice in (&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;): num1 = float(input(&quot;Enter first number: &quot;)) num2 = float(input(&quot;Enter second number: &quot;)) if choice == &#39;1&#39;: print(num1, &quot;+&quot;, num2, &quot;=&quot;, add(num1, num2)) elif choice == &#39;2&#39;: print(num1, &quot;-&quot;, num2, &quot;=&quot;, subtract(num1, num2)) elif choice == &#39;3&#39;: print(num1, &quot;*&quot;, num2, &quot;=&quot;, multiply(num1, num2)) elif choice == &#39;4&#39;: print(num1, &quot;/&quot;, num2, &quot;=&quot;, divide(num1, num2)) next_calculation = input(&quot;Let&#39;s do next calculation? (yes/no): &quot;) if next_calculation == &quot;no&quot;: break else: print(&quot;Invalid Input&quot;) . Select operation. 1.Add 2.Subtract 3.Multiply 4.Divide 5.0 + 8.0 = 13.0 .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/26/calc.html",
            "relUrl": "/jupyter/2022/08/26/calc.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Python Practice/Quiz",
            "content": "The purpose of this entry is to capture the basics of Python in Jupyter. . Greetings . This greeting code uses a simple print command. . print(&quot;Hello, please go ahead and try to don&#39;t fail the quiz!&quot;) # a greeting . The following code sequences provide a quiz about the basics of Python by using those basics: . import: Includes functions that were previously developed. . def: def/function/procedure; used for defining a function usually at the beginning of a sequence. . prompt: A message output to the user to describe the input requested. . msg: Short for message, used to capture input command. . Questions, answers and responses are defined using these basics. . Rsp and if/else commands will be used for evaluating scores. . Part 1: Mr. Mortensen&#39;s Questions . import getpass ,sys def question_and_answer(prompt): # defining the Q&amp;A Function print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 # number of questions correct = 0 # running score print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # greetings print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) # the number of questions is presented here question_and_answer(&quot;Are you ready to take a test?&quot;) # this question does not need a correct answer since it&#39;s not using an rsp variable rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) # the following questions require a correct answer since they are using an rsp variable if rsp == &quot;import&quot;: # correct answer print(rsp + &quot; is correct!&quot;) # response to a correct answer correct += 1 # gain points by answering correctly else: # giving an incorrect answer print(rsp + &quot; is incorrect!&quot;) # response to an incorrect answer rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # marks the end of the quiz . Hello, manimani running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Answer: Yes Question: What command is used to include other functions that were previously developed? import is correct! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! manimani you scored 3/3 . Part 2: My Questions . import getpass ,sys questions = 3 correct = 0 rsp = question_with_response(&quot;What is the classic greetings in Python?&quot;) if rsp == &quot;Hello, World!&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command activates the jupyter notebook input box?&quot;) if rsp == &quot;input&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Where is the false branch of code in an if command?&quot;) if rsp == &quot;else&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: What is the classic greetings in Python? Hello, World! is correct! Question: What command activates the jupyter notebook input box? input is correct! Question: Where is the false branch of code in an if command? else is correct! manimani you scored 3/3 . The end of the quiz. Have a nice day! . Additional Resources: . These CollegeBoard videos are great for learning more about Python. .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/25/pythonlearnings.html",
            "relUrl": "/jupyter/2022/08/25/pythonlearnings.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Inspirational Quote",
            "content": ".",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/25/inspirationalquote.html",
            "relUrl": "/markdown/2022/08/25/inspirationalquote.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "An Ied Assignment",
            "content": "This is an assignment from “Intro to Engineering Design” that I thought I should share. Please don’t plagiarize. . Category Explanation . Client | Entertainment/Toy manufacturing Companies (Main option: Hasbro) | . Target Consumer | High school students of all ages living with their parents/guardians | . Designer(s) | Mani Taleban | . Problem Statement | A high school student can only use their phone and computer device for education and school assignments. The student’s parents have forbidden them from accessing their phone and computer device for entertainment purposes. The student needs approximately 10 minutes between assignments to do an entertaining activity in order to become fully operational again and avoid severe boredom. The student always experiences boredom during the 10-minute breaks between assignments. The student finds it necessary to find a solution, because they cannot continue operating correctly without having some source of entertainment and refreshment. | . Design Statement | Create an entertaining, refreshing, and engaging activity/game | . Criteria | Should be playable for approximately 10 minutes . | Should have a scoring system . | Should be both single-player and multi-player . | Should increase the level of dopamine . | | . Constraints | Should only use common office supplies . | Should cost no money . | Should fit in an office-sized room environment . | Creating the activity/game should take no longer than 5 minutes . | | .",
            "url": "https://manigggg18.github.io/manimani/2022/08/24/An-IED-Assignment.html",
            "relUrl": "/2022/08/24/An-IED-Assignment.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Tools & Equipment Check",
            "content": "Bash Check . Project Directory . echo &quot;Using conditional statement to create a project directory and project&quot; export project_dir=$HOME/vscode export project=$project_dir/manimani export project_repo=&quot;https://github.com/manigggg18/manimani.git&quot; cd ~ if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Fastpages . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al . echo &quot;Look for posts&quot; export posts=$project/_posts cd $posts pwd ls -l . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks cd $notebooks pwd ls -l . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images pwd ls -l . Markdown Files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Env, Git, and Github . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . Installation Check . Python Check . python --version python2 --version . Conda Check . conda list . echo Conda Check test=&quot;jupyter&quot; check=`conda list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . Jupyter Check . jupyter --version jupyter kernelspec list . test=&quot;python3&quot; check=`jupyter kernelspec list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . Tools and Equipment Check Successful .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/22/two.html",
            "relUrl": "/jupyter/2022/08/22/two.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Hopefully My First Markdown Post",
            "content": "Here We Go . Testing . Apparently “Jekyll requires blog post files to be named according to the following format”: . 2022-08-20-maaaarkdoooown.md . I think I’m going to leave this empty. . I Hope I Know What I’m Doing . I really do. . . Favorite Instruments . Here’s a list: . Piano (Can Play) | Drums (Cannot Play) | . Here’s a Quote . Life is like a sandwich, no matter which side you start from, the bread always comes first. . Images . I don’t like images. . The End…? . I think so. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/22/test-markdown-post.html",
            "relUrl": "/markdown/2022/08/22/test-markdown-post.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "An Attempt to Create My First Jupyter Notebook",
            "content": "Chapter 1 . This is Chapter 1, thanks for reading. . Chapter 2 . This is Chapter 2, very exciting. . Final Chapter . This is the final chapter, what an epic trilogy. . Thanks for reading. .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/21/firstnotebook.html",
            "relUrl": "/jupyter/2022/08/21/firstnotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Mani Taleban is a High School Senior at DNHS, taking AP Computer Science. .",
          "url": "https://manigggg18.github.io/manimani/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Notes & Vocab",
          "content": "This page will be used for taking notes throughout the APCSP course . . Week Markdown Jupyter Other Projects . 12 | n/a | n/a | n/a | n/a | . 11 | N@tM Blog | n/a | n/a | Final Project Finished | . 10 | n/a | n/a | n/a | Working on Final Project | . 9 | n/a | Python Web API Endpoints using Songs, Javascript Web Page using an API, Fetch of Backend Songs | n/a | Working On Final Project | . 8 | AP 4.1 Quiz Blog | n/a | n/a | Group Project Plan Check-in | . 7 | AP 1.4 Quiz Blog | Python RapidAPI, Identifying Errors | n/a | Group Project Final Plan | . 6 | AWS Development | n/a | n/a | AWS Server Setup (Docker included) | . 5 | AP 1.1-1.3 Quiz Blog | Java Table, Java (IPYNB) | n/a | Submenu, Group Planning for Final Project | . 4 | Testing Local Server Functions, Program Purpose - Mani&#39;s Idea | n/a | n/a | Personal Flask Server, Setting up Fastpages local server, Docker Setup, Flask Video | . 3 | Code.org App Development Blog, CPT Initial Plan/Design | n/a | n/a | Code.org App | . 2 | Changing the Theme (effects) | Lists, Dictionaries, and Iterations | n/a | Table, Dark Theme | . 1 | Physics Notes, Inspirational Post | Python Intro, Calculator, Tools and Equipment Check | Sample Word Doc | Page Logo, Notes &amp; Vocab, Images | . 0 | Sample MD Post | Sample Jypyter Notebook | n/a | Images, Links, index.html, _config.yml | . Week 0 . Sample Jupyter Notebook . Sample Markdown Post . Week 1 . Tools and Equipment Check . Sample Word Document . Python Intro . Inspirational Post . Calculator . Physics Notes #1 . Week 2 . Lists, Dictionaries, and Iterations . Changing the Theme (Effects) . Week 3 . Code.org App Development Blog . Code.org App . CPT Initial Concept/Design . Week 4 . Testing Local Server Functions . Program Purpose - Mani’s Idea . Personal Flask Server . Setting up Fastpages local server (NOTE: only works locally) . Docker Setup . Flask Video . Week 5 . AP 1.1-1.3 Quiz Blog . Java Table . Java (IPYNB) . Submenu . Group Planning for Final Project . Week 6 . AWS Development . AWS Server Setup (Docker included) . Week 7 . AP 1.4 Quiz Blog . Python RapidAPI . Identifying Errors . Group Project Final Plan . Week 8 . AP 4.1 Quiz Blog . Group Project Plan Check . Week 9 . Python Web API Endpoints using Songs . Javascript Web Page using an API . Fetch of Backend Songs . Working On Final Project . Week 10 . Working on Final Project . Week 11 . N@tm Blog . Final Project Finished . Week 12 .",
          "url": "https://manigggg18.github.io/manimani/notes%20&%20vocab/",
          "relUrl": "/notes & vocab/",
          "date": ""
      }
      
  

  

  

  

  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://manigggg18.github.io/manimani/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}