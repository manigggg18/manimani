{
  
    
        "post0": {
            "title": "Java Table",
            "content": "Table . The cell containing previous definitions and functions is hidden in order to create a more organized blog. . Full code can be found here. . Medias.prototype._toHtml = function() { // inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 5px solid blue;&quot; + &quot;box-shadow: 1em 1em 1em red;&quot; ); var body = &quot;&quot;; // Heading body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Name&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Creator&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Date&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Type&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array for (var row of catalog.medias) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.cre + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.date + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.type + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( // div, table, table body &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(catalog._toHtml()); // receives parameter of defined HTML fragment . NameCreatorDateType . Kid A | Radiohead | 2000 | Album | Whiplash | Damien Chazelle | 2014 | Movie | Atonement | Joe Wright | 2007 | Movie | Prestige | Christopher Nolan | 2006 | Movie | Fargo | Noah Hawley | 2014 | Show | Daredevil | Kati Johnson | 2015 | Show | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://manigggg18.github.io/manimani/jupyter/java_ipynb",
            "relUrl": "/jupyter/java_ipynb",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Java (IPYNB)",
            "content": "Single Function: Product Return . const factorial = function fac(n) { // calls a function which performs a calculation and returns the result return n &lt; 2 ? 1 : n * fac(n - 1); } console.log(factorial(7)) . 5040 . Set of Functions and Definitions: JSON Lists and Prototypes . function printInfo(msg) { // Necessary definition console.log(typeof msg + &quot;;&quot;, msg); } function Media(name, cre, date) { // Define media this.name = name; this.cre = cre; this.date = date; this.type = &quot;&quot;; } Media.prototype.setType = function(type) { // Introduce prototype this.type = type; } Media.prototype.toJSON = function() { // organize const data = {name: this.name, cre: this.cre, date: this.date, type: this.type}; const jsonString = JSON.stringify(data); return jsonString; } var album = new Media(&quot;Kid A&quot;, &quot;Radiohead&quot;, 2000); // song variable album.setType(&quot;Album&quot;); var movie = [ // movie variables new Media(&quot;Whiplash&quot;, &quot;Damien Chazelle&quot;, 2014), new Media(&quot;Atonement&quot;, &quot;Joe Wright&quot;, 2007), new Media(&quot;Prestige&quot;, &quot;Christopher Nolan&quot;, 2006) ] var show = [ // show variables new Media(&quot;Fargo&quot;, &quot;Noah Hawley&quot;, 2014), new Media(&quot;Daredevil&quot;, &quot;Kati Johnson&quot;, 2015), ] function Medias(album, movie, show) { album.setType(&quot;Album&quot;); this.album = album; this.medias = [album]; this.movie = movie; this.show = show; this.movie.forEach(movie =&gt; {movie.setType(&quot;Movie&quot;); this.medias.push(movie);}); this.show.forEach(show =&gt; {show.setType(&quot;Show&quot;); this.medias.push(show);}); this.jsonMedias = []; this.medias.forEach(media =&gt; this.jsonMedias.push(media.toJSON())); } catalog = new Medias(album, movie, show); printInfo(catalog.medias); printInfo(catalog.medias[4].name); printInfo(catalog.jsonMedias[4]); printInfo(JSON.parse(catalog.jsonMedias[4])); . object; [ Media { name: &#39;Kid A&#39;, cre: &#39;Radiohead&#39;, date: 2000, type: &#39;Album&#39; }, Media { name: &#39;Whiplash&#39;, cre: &#39;Damien Chazelle&#39;, date: 2014, type: &#39;Movie&#39; }, Media { name: &#39;Atonement&#39;, cre: &#39;Joe Wright&#39;, date: 2007, type: &#39;Movie&#39; }, Media { name: &#39;Prestige&#39;, cre: &#39;Christopher Nolan&#39;, date: 2006, type: &#39;Movie&#39; }, Media { name: &#39;Fargo&#39;, cre: &#39;Noah Hawley&#39;, date: 2014, type: &#39;Show&#39; }, Media { name: &#39;Daredevil&#39;, cre: &#39;Kati Johnson&#39;, date: 2015, type: &#39;Show&#39; } ] string; Fargo string; {&#34;name&#34;:&#34;Fargo&#34;,&#34;cre&#34;:&#34;Noah Hawley&#34;,&#34;date&#34;:2014,&#34;type&#34;:&#34;Show&#34;} object; { name: &#39;Fargo&#39;, cre: &#39;Noah Hawley&#39;, date: 2014, type: &#39;Show&#39; } .",
            "url": "https://manigggg18.github.io/manimani/jupyter/java_ipynb",
            "relUrl": "/jupyter/java_ipynb",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Program Purpose - Mani's Idea",
            "content": "Same Design as Create Performance Task . initial design concept: In the form of a “loading screen”. The “loading screen” gets filled with each click. . Features: Timer, Calculator, Counter, Scoring System, Frontend elements. . Language: Undecided . Objective: Click as fast as possible in a given time. . . . . DISCLAIMER: This is just an idea for the group project and NOT a final concept. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/22/prpurpose.html",
            "relUrl": "/markdown/2022/09/22/prpurpose.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Testing Local Server Functions",
            "content": "Process . After entering the “make server” command on a terminal and letting it run, I decided to add a minor change to ‘index.html`. Some texts came up on the terminal and the change was presented immediately. The only problem was that adding a Jupyter Notebook and editing it did not have any effects. . Effects . . . .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/14/ls.html",
            "relUrl": "/markdown/2022/09/14/ls.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "CPT Initial Concept",
            "content": "Individual/Collaboration: Undecided . Language: Python or JavaScript . Goals: . Final program code (created independently or collaboratively) . | A video that displays the running of your program and demonstrates functionality you developed (created independently) . | Written responses to all the prompts in the performance task (created independently) . | . Plan: . I’m planning to design a simple yet creative game, though I’m still not sure what development program I’m going to use. . My initial concept is a time based game. The user has to click/press a key for a specified number of times before the time runs out. I’m planning to implement a code that makes the game harder after each “level”. . Design: . I’m still working on it, but my initial design concept is in the form of a “loading screen”. The “loading screen” gets filled with each click. . .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/11/cpt1.html",
            "relUrl": "/markdown/2022/09/11/cpt1.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "App Development Blog",
            "content": "Link to the app can be found at the bottom of the page. . Note: These code blocks are not optimized for Python. . . Process . Making the quiz was very simple and interesting. The quiz includes 3 multiple-choice questions and 1 free-response question. Working with different elements such as buttons and images was easy for the most part and didn’t present any challenges. Making the free response question was a bit tricky. I had to play around with its assigned block and the text input function to make it work. . # Default Notation . onEvent(&quot;textinput&quot;, &quot;change&quot;, function(event) { . }); . # My Edit . onEvent(&quot;text_input1&quot;, &quot;change&quot;, function(event) { . }); . . Another extra feature that I added to my app was the usage of retrieving data from a text input. By adding the following code to the text input function, I managed to display the entered number from the free-response question: . # Default Notation . onEvent(&quot;textinput&quot;, &quot;change&quot;, function(event) { . setText(&quot;id&quot;, + getText(&quot;textinput&quot;)); . | setScreen(&quot;id&quot;); . | . }); . # My Edit . onEvent(&quot;text_input1&quot;, &quot;change&quot;, function(event) { . setText(&quot;response&quot;, &quot;Wow, only &quot; + getText(&quot;text_input1&quot;) + &quot;?&quot;); . | setScreen(&quot;r1&quot;); . | . }); . . . I also added to add “wrong answer” screens which appear if the user selects wrong answers. I simply assigned these screens to appropriate buttons. . . . Currently I’m trying to figure out a way to make the code a bit shorter using conditionals, but I don’t think it’ll work since I’m not that familiar with JavaScript. . . Update . I decided to use the dropdown function as a way to display a body of text. This dropdown box presents the “prize” to the user. . . . The trickiest part of developing this quiz was displaying the final score at the end. I used a variables and individual functions to make it work. The individual functions largely increase the size of the code and I couldn’t find a way to shorten them. Each individual function is assigned to a button. Buttons with correct answers add one point to the initial variable and buttons with incorrect answers subtract one point. . # setting the variable . var score = 0; . setText(&quot;text_input&quot;, &quot;Score = &quot; + score); . onEvent(&quot;id&quot;, &quot;click&quot;, function(event) { # in this case, id is a correct answer . score = score + 1; . | setText(&quot;text_input&quot;, &quot;Score = &quot; + score); # one point added . | . }); . onEvent(&quot;id&quot;, &quot;click&quot;, function(event) { # in this case, id is an incorrect answer . score = score - 1; . | setText(&quot;text_input&quot;, &quot;Score = &quot; + score); # one point subtracted . | . }); . . . You can check out the quiz by clicking here. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/11/appblog.html",
            "relUrl": "/markdown/2022/09/11/appblog.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Changing the Theme (Effects)",
            "content": "First Attempt . I tried to change the theme and as a result the CI status changed from “passing” to “failing”. My page also didn’t look any different. . . Second Attempt . . It worked but some posts looked very off-putting. . . So I changed it back to the default theme. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/09/01/theme.html",
            "relUrl": "/markdown/2022/09/01/theme.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Basic L/D . name = &quot;Mani T&quot; print(&quot;name&quot;, name, type(name)) age = 17 print(&quot;age&quot;, age, type(age)) score = 100.0 print(&quot;score&quot;, score, type(score)) print() langs = [&quot;Python&quot;, &quot;Bash&quot;, &quot;HTML&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() person = { &quot;name&quot;: name, # keys and values &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Mani T &lt;class &#39;str&#39;&gt; age 17 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;Bash&#39;, &#39;HTML&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Mani T&#39;, &#39;age&#39;: 17, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;Bash&#39;, &#39;HTML&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Mani T &lt;class &#39;str&#39;&gt; . Complex L/D . InfoDb = [] InfoDb.append({ #introduces the data &quot;FirstName&quot;: &quot;Mani&quot;, &quot;LastName&quot;: &quot;Taleban&quot;, &quot;DOB&quot;: &quot;May 8&quot;, &quot;Residence&quot;: &quot;Somewhere&quot;, &quot;SE&quot;: &quot;moeint56403@stu.powayusd.com&quot;, &quot;PE&quot;: &quot;tmanimasih@gmail.com&quot;, &quot;School&quot;: &quot;Del Norte High School&quot;, &quot;FM&quot;: &quot;Whiplash&quot;, &quot;FB&quot;: &quot;Radiohead&quot; }) print(InfoDb) def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # comma = space print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t = tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;School Email:&quot;, d_rec[&quot;SE&quot;]) print(&quot; t&quot;, &quot;Personal Email:&quot;, d_rec[&quot;PE&quot;]) print(&quot; t&quot;, &quot;School:&quot;, d_rec[&quot;School&quot;]) print(&quot; t&quot;, &quot;Favorite Movie:&quot;, d_rec[&quot;FM&quot;]) print(&quot; t&quot;, &quot;Favorite Band:&quot;, d_rec[&quot;FB&quot;]) print() def for_loop(): # for loop print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . [{&#39;FirstName&#39;: &#39;Mani&#39;, &#39;LastName&#39;: &#39;Taleban&#39;, &#39;DOB&#39;: &#39;May 8&#39;, &#39;Residence&#39;: &#39;Somewhere&#39;, &#39;SE&#39;: &#39;moeint56403@stu.powayusd.com&#39;, &#39;PE&#39;: &#39;tmanimasih@gmail.com&#39;, &#39;School&#39;: &#39;Del Norte High School&#39;, &#39;FM&#39;: &#39;Whiplash&#39;, &#39;FB&#39;: &#39;Radiohead&#39;}] For loop output Mani Taleban Residence: Somewhere Birth Day: May 8 School Email: moeint56403@stu.powayusd.com Personal Email: tmanimasih@gmail.com School: Del Norte High School Favorite Movie: Whiplash Favorite Band: Radiohead . For Loop with an Index . InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;Mani&quot;, &quot;LastName&quot;: &quot;Taleban&quot;, &quot;DOB&quot;: &quot;May 8&quot;, &quot;Residence&quot;: &quot;Somewhere&quot;, &quot;SE&quot;: &quot;moeint56403@stu.powayusd.com&quot;, &quot;PE&quot;: &quot;tmanimasih@gmail.com&quot;, &quot;School&quot;: &quot;Del Norte High School&quot;, &quot;FM&quot;: &quot;Whiplash&quot;, &quot;FB&quot;: &quot;Radiohead&quot; }) print(InfoDb) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . [{&#39;FirstName&#39;: &#39;Mani&#39;, &#39;LastName&#39;: &#39;Taleban&#39;, &#39;DOB&#39;: &#39;May 8&#39;, &#39;Residence&#39;: &#39;Somewhere&#39;, &#39;SE&#39;: &#39;moeint56403@stu.powayusd.com&#39;, &#39;PE&#39;: &#39;tmanimasih@gmail.com&#39;, &#39;School&#39;: &#39;Del Norte High School&#39;, &#39;FM&#39;: &#39;Whiplash&#39;, &#39;FB&#39;: &#39;Radiohead&#39;}] While loop output Mani Taleban Residence: Somewhere Birth Day: May 8 School Email: moeint56403@stu.powayusd.com Personal Email: tmanimasih@gmail.com School: Del Norte High School Favorite Movie: Whiplash Favorite Band: Radiohead . InfoDb based Quiz . import getpass ,sys def question_and_answer(prompt, answer): # question and answer function print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): # this conditional determines the answers print(&quot;:)&quot;) global correct correct += 1 else: print (&quot;:(&quot;) questions = 5 correct = 0 Q1 = question_and_answer(&quot;What should I listen to right now?&quot;, &quot;music&quot;) Q2 = question_and_answer(&quot;When was I born?&quot;, &quot;may 8&quot;) Q3 = question_and_answer(&quot;Why was I born?&quot;, &quot;idk&quot;) Q4 = question_and_answer(&quot;Who plays Fletcher in Whiplash?&quot;, &quot;jk simmons&quot;) Q5 = question_and_answer(&quot;How&#39;s it going?&quot;, &quot;eh&quot;) Questions = { # infoDb &quot;Q1&quot;: Q1, &quot;Q2&quot;: Q2, &quot;Q3&quot;: Q3, &quot;Q4&quot;: Q4, &quot;Q5&quot;: Q5 } print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: What should I listen to right now? Answer: music :) Question: When was I born? Answer: may 8 :) Question: Why was I born? Answer: idk :) Question: Who plays Fletcher in Whiplash? Answer: jk simmons :) Question: How&#39;s it going? Answer: eh :) manimani you scored 5/5 .",
            "url": "https://manigggg18.github.io/manimani/jupyter/python_lists",
            "relUrl": "/jupyter/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Physics Notes 1",
            "content": "Background . Too often we think the goal of a laboratory is to “get an answer”. Just as a graph with one point does not tell us much, calculating a single value can be misleading. Although the accuracy of this value can be determined if a standard value is known, the precision or reproducibility cannot. One way to picture this precision is to graph the data and fit the data points with a best fit line. A best fit line should be drawn with as many points above it as below it, the closer the data points are to the line the more precise and reliable your results. . The equation describing the graph also shows how variables are related, allowing new values to be extrapolated or calculated from the graph. An additional step called “linearizing” helps determine the functional relationship between variables. . The objective of the linearizing process is to change the independent or dependent variable, for example change x to 1/x, so that the resulting graph is linear. So then, the equation describing the linear graph becomes; . y = slope (1/x) + intercept . Credits to Mr. Liao .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/28/physicsnotes.html",
            "relUrl": "/markdown/2022/08/28/physicsnotes.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Calculator",
            "content": "def add(x, y): return x + y def subtract(x, y): return x - y def divide(x, y): return x / y def multiply(x, y): return x * y print(&quot;Select operation.&quot;) print(&quot;1.Add&quot;) print(&quot;2.Subtract&quot;) print(&quot;3.Multiply&quot;) print(&quot;4.Divide&quot;) while True: choice = input(&quot;Enter choice(1/2/3/4): &quot;) if choice in (&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;): num1 = float(input(&quot;Enter first number: &quot;)) num2 = float(input(&quot;Enter second number: &quot;)) if choice == &#39;1&#39;: print(num1, &quot;+&quot;, num2, &quot;=&quot;, add(num1, num2)) elif choice == &#39;2&#39;: print(num1, &quot;-&quot;, num2, &quot;=&quot;, subtract(num1, num2)) elif choice == &#39;3&#39;: print(num1, &quot;*&quot;, num2, &quot;=&quot;, multiply(num1, num2)) elif choice == &#39;4&#39;: print(num1, &quot;/&quot;, num2, &quot;=&quot;, divide(num1, num2)) next_calculation = input(&quot;Let&#39;s do next calculation? (yes/no): &quot;) if next_calculation == &quot;no&quot;: break else: print(&quot;Invalid Input&quot;) . Select operation. 1.Add 2.Subtract 3.Multiply 4.Divide 5.0 + 8.0 = 13.0 .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/26/calc.html",
            "relUrl": "/jupyter/2022/08/26/calc.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Python Practice/Quiz",
            "content": "The purpose of this entry is to capture the basics of Python in Jupyter. . Greetings . This greeting code uses a simple print command. . print(&quot;Hello, please go ahead and try to don&#39;t fail the quiz!&quot;) # a greeting . The following code sequences provide a quiz about the basics of Python by using those basics: . import: Includes functions that were previously developed. . def: def/function/procedure; used for defining a function usually at the beginning of a sequence. . prompt: A message output to the user to describe the input requested. . msg: Short for message, used to capture input command. . Questions, answers and responses are defined using these basics. . Rsp and if/else commands will be used for evaluating scores. . Part 1: Mr. Mortensen&#39;s Questions . import getpass ,sys def question_and_answer(prompt): # defining the Q&amp;A Function print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 # number of questions correct = 0 # running score print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # greetings print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) # the number of questions is presented here question_and_answer(&quot;Are you ready to take a test?&quot;) # this question does not need a correct answer since it&#39;s not using an rsp variable rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) # the following questions require a correct answer since they are using an rsp variable if rsp == &quot;import&quot;: # correct answer print(rsp + &quot; is correct!&quot;) # response to a correct answer correct += 1 # gain points by answering correctly else: # giving an incorrect answer print(rsp + &quot; is incorrect!&quot;) # response to an incorrect answer rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # marks the end of the quiz . Hello, manimani running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Answer: Yes Question: What command is used to include other functions that were previously developed? import is correct! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! manimani you scored 3/3 . Part 2: My Questions . import getpass ,sys questions = 3 correct = 0 rsp = question_with_response(&quot;What is the classic greetings in Python?&quot;) if rsp == &quot;Hello, World!&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command activates the jupyter notebook input box?&quot;) if rsp == &quot;input&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Where is the false branch of code in an if command?&quot;) if rsp == &quot;else&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Question: What is the classic greetings in Python? Hello, World! is correct! Question: What command activates the jupyter notebook input box? input is correct! Question: Where is the false branch of code in an if command? else is correct! manimani you scored 3/3 . The end of the quiz. Have a nice day! . Additional Resources: . These CollegeBoard videos are great for learning more about Python. .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/25/pythonlearnings.html",
            "relUrl": "/jupyter/2022/08/25/pythonlearnings.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Inspirational Quote",
            "content": ".",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/25/inspirationalquote.html",
            "relUrl": "/markdown/2022/08/25/inspirationalquote.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "An Ied Assignment",
            "content": "This is an assignment from “Intro to Engineering Design” that I thought I should share. Please don’t plagiarize. . Category Explanation . Client | Entertainment/Toy manufacturing Companies (Main option: Hasbro) | . Target Consumer | High school students of all ages living with their parents/guardians | . Designer(s) | Mani Taleban | . Problem Statement | A high school student can only use their phone and computer device for education and school assignments. The student’s parents have forbidden them from accessing their phone and computer device for entertainment purposes. The student needs approximately 10 minutes between assignments to do an entertaining activity in order to become fully operational again and avoid severe boredom. The student always experiences boredom during the 10-minute breaks between assignments. The student finds it necessary to find a solution, because they cannot continue operating correctly without having some source of entertainment and refreshment. | . Design Statement | Create an entertaining, refreshing, and engaging activity/game | . Criteria | Should be playable for approximately 10 minutes . | Should have a scoring system . | Should be both single-player and multi-player . | Should increase the level of dopamine . | | . Constraints | Should only use common office supplies . | Should cost no money . | Should fit in an office-sized room environment . | Creating the activity/game should take no longer than 5 minutes . | | .",
            "url": "https://manigggg18.github.io/manimani/2022/08/24/An-IED-Assignment.html",
            "relUrl": "/2022/08/24/An-IED-Assignment.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Tools & Equipment Check",
            "content": "Bash Check . Project Directory . echo &quot;Using conditional statement to create a project directory and project&quot; export project_dir=$HOME/vscode export project=$project_dir/manimani export project_repo=&quot;https://github.com/manigggg18/manimani.git&quot; cd ~ if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Fastpages . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al . echo &quot;Look for posts&quot; export posts=$project/_posts cd $posts pwd ls -l . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks cd $notebooks pwd ls -l . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images pwd ls -l . Markdown Files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Env, Git, and Github . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . Installation Check . Python Check . python --version python2 --version . Conda Check . conda list . echo Conda Check test=&quot;jupyter&quot; check=`conda list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . Jupyter Check . jupyter --version jupyter kernelspec list . test=&quot;python3&quot; check=`jupyter kernelspec list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . Tools and Equipment Check Successful .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/22/two.html",
            "relUrl": "/jupyter/2022/08/22/two.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Hopefully My First Markdown Post",
            "content": "Here We Go . Testing . Apparently “Jekyll requires blog post files to be named according to the following format”: . 2022-08-20-maaaarkdoooown.md . I think I’m going to leave this empty. . I Hope I Know What I’m Doing . I really do. . . Favorite Instruments . Here’s a list: . Piano (Can Play) | Drums (Cannot Play) | . Here’s a Quote . Life is like a sandwich, no matter which side you start from, the bread always comes first. . Images . I don’t like images. . The End…? . I think so. .",
            "url": "https://manigggg18.github.io/manimani/markdown/2022/08/22/test-markdown-post.html",
            "relUrl": "/markdown/2022/08/22/test-markdown-post.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "An Attempt to Create My First Jupyter Notebook",
            "content": "Chapter 1 . This is Chapter 1, thanks for reading. . Chapter 2 . This is Chapter 2, very exciting. . Final Chapter . This is the final chapter, what an epic trilogy. . Thanks for reading. .",
            "url": "https://manigggg18.github.io/manimani/jupyter/2022/08/21/firstnotebook.html",
            "relUrl": "/jupyter/2022/08/21/firstnotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Mani Taleban is a High School Senior at DNHS, taking AP Computer Science. .",
          "url": "https://manigggg18.github.io/manimani/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Notes & Vocab",
          "content": "This page will be used for taking notes throughout the APCSP course . . Week Markdown Jupyter Word Other . 3 | Code.org App Development Blog, CPT Initial Plan/Design | n/a | n/a | Code.org App | . 2 | Changing the Theme (effects) | Lists, Dictionaries, and Iterations | n/a | Table, Dark Theme | . 1 | Physics Notes, Inspirational Post | Python Intro, Calculator, Tools and Equipment Check | Sample Word Doc | Page Logo, Notes &amp; Vocab, Images | . 0 | Sample MD Post | Sample Jypyter Notebook | n/a | Images, Links, index.html, _config.yml | . Week 0 . Sample Jupyter Notebook . Sample Markdown Post . Week 1 . Tools and Equipment Check . Sample Word Document . Python Intro . Inspirational Post . Calculator . Physics Notes #1 . Week 2 . Lists, Dictionaries, and Iterations . Changing the Theme (Effects) . Week 3 . Code.org App Development Blog . Code.org App . CPT Initial Concept/Design .",
          "url": "https://manigggg18.github.io/manimani/notes%20&%20vocab/",
          "relUrl": "/notes & vocab/",
          "date": ""
      }
      
  

  

  

  

  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://manigggg18.github.io/manimani/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}